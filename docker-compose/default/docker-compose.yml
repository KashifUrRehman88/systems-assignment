# In this docker-compose.yml:-
# 1. The sdmanager-app service defines your Spring Boot application.
# 2. The build section specifies the context where your Dockerfile is located.
# 3. The image name is set to "sdmanager-app".
# 4. Ports are mapped to allow access to your application.
# 5. Environment variables are configured for the database connection.
# 6. The mysql-db service defines the MySQL database.
# 7. The database credentials and configuration are set as environment variables.
# 8. Ports are mapped to allow access to the database.

# Replace placeholders like your-application.jar, your-db-username, your-db-password, your-root-password, and adjust paths accordingly.


#To use this docker-compose.yml, navigate to the directory containing the file and run:

# command : - docker-compose up
#This will build and run both your Spring Boot application and the MySQL database in separate containers.

version: '3'
services:
  sdmanager-app:
    build:
      context: ./path/to/your/application
      dockerfile: Dockerfile
    image: sdmanager
    container_name: sdmanager
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/sdmanager_db?useSSL=false
      SPRING_DATASOURCE_USERNAME: your-db-username
      SPRING_DATASOURCE_PASSWORD: your-db-password
  mysql-db:
    image: mysql:5.7
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: your-root-password
      MYSQL_DATABASE: sdmanager_db
      MYSQL_USER: your-db-username
      MYSQL_PASSWORD: your-db-password